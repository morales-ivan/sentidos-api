name: Docker image on dev push

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  IMAGE_NAME: sentidos-api-dev

jobs:
  # Build project and test project
  #build:
  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up JDK 11
  #      uses: actions/setup-java@v2
  #      with:
  #        java-version: '11'
  #        distribution: 'adopt'
  #    - name: Grant execute permission for gradlew
  #      run: chmod +x gradlew
  #    - name: Build with Gradle
  #      run: ./gradlew build

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version (branch name)
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "develop" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION